@model GadgetHub.Domain.Entities.ShippingDetails

@{
	ViewBag.Title = "GadgetHub: Checkout";
}

<h2>Checkout now</h2>

<p>
	Please enter your details, and we'll ship your goods right away!
</p>

@using (Html.BeginForm())
{
	@Html.ValidationSummary()

	<h3>Ship to</h3>
	<div class="form-group">
		<label>Name:</label>
		@Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
	</div>
	foreach (var property in ViewData.ModelMetadata.Properties)
	{
		if (property.PropertyName != "Name" && property.PropertyName != "GiftWrap")
		{
			<div class="form-group">
				<label>@(property.DisplayName ?? property.PropertyName)</label>
				@Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
			</div>
		}
	}
	@*<h3>Address</h3>
	<div class="form-group">
		<label>Address:</label>
		@Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
	</div>

	<h3>Secondary Address</h3>
	<div class="form-group">
		<label>Address:</label>
		@Html.TextBoxFor(x => x.SecondaryAddress, new { @class = "form-control" })
	</div>

	<h3>Third Address</h3>
	<div class="form-group">
		<label>Address:</label>
		@Html.TextBoxFor(x => x.ThirdAddress, new { @class = "form-control" })
	</div>

	<h3>City</h3>
	<div class="form-group">
		<label>City:</label>
		@Html.TextBoxFor(x => x.City, new { @class = "form-control" })
	</div>

	<h3>State</h3>
	<div class="form-group">
		<label>State:</label>
		@Html.TextBoxFor(x => x.State, new { @class = "form-control" })
	</div>

	<h3>Zip</h3>
	<div class="form-group">
		<label>Zip:</label>
		@Html.TextBoxFor(x => x.Zip, new { @class = "form-control" })
	</div>

	<h3>Country</h3>
	<div class="form-group">
		<label>Country:</label>
		@Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
	</div>*@

	<h3>Options</h3>
	<div class="checkbox">
		<label>
			@Html.CheckBoxFor(x => x.GiftWrap)
			Gift wrap these items
		</label>
	</div>

	<div class="text-center">
		<input class="btn btn-success" type="submit" value="Complete Order"/>
	</div>
}